{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'text-black',
    'body-font',
    'bg-black',
    'px-8'
  ]
%}
{% set text_title = content.field_text_content_title['#items'].getValue().0.value %}
{% set text_content = content.field_content['#items'].getValue().0.value %}
{% set link_item = content.field_link['#items'].getValue()[0] %}
{% set type_setting = content.field_text_component_type['#items'].getValue().0.value %}

{% if type_setting == 'advanced' %}
  {% block paragraph %}
    <section{{ attributes.addClass(classes) }}>
      {% block content %}
          <div class="lg:w-2/3 flex flex-col sm:flex-row sm:items-center items-start mx-auto py-24">
            <div class="lg:w-3/5 md:w-1/2 md:pr-16 lg:pr-0 pr-0">
              <h1 class="sm:text-3xl text-2xl text-white font-medium title-font mb-2">{{ text_title|t }}</h1>
              <div class="leading-relaxed text-white text-justify"> {{ text_content|striptags }} </div>
            </div>
            <div class="lg:w-2/6 md:w-1/2 p-8 flex flex-col md:ml-auto w-full mt-10 md:mt-0">
              <button class="text-white hover:text-orange-500 bg-orange-500 border-0 py-2 px-6 focus:outline-none hover:bg-white rounded text-lg">
               {{ link(link_item.title, link_item.uri) }}
              </button>
            </div>
          </div>
        </div>  
      {% endblock %}
    </section>
  {% endblock paragraph %}
{% else %}
  <section class="text-black body-font">
      {{ text_content|raw }}
    </div>
  </section>
{% endif %}


